name: e2e

on:
  workflow_dispatch:
  # push:
  #   branches: [ '*' ]
  #   tags-ignore: [ '*' ]

jobs:
  kubernetes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Flux
        uses: fluxcd/flux2/action@main
      - name: Setup Kubernetes
        uses: helm/kind-action@v1.7.0
        with:
          cluster_name: flux
      - name: Install Flux in Kubernetes Kind
        run: flux install
      - name: Setup cluster reconciliation
        env:
          SOPS_AGE_SECRET: ${{ secrets.SOPS_AGE_SECRET }}
        shell: bash
        run: |
          kubectl create ns sda
          echo "${{ secrets.SOPS_AGE_SECRET }}" > /tmp/sops-agekey
          cat /tmp/sops-agekey | 
          kubectl create secret generic sops-age \
          --namespace=flux-system \
          --from-file=age.agekey=/dev/stdin \
          kubectl get secret sops-age -n flux-system -o jsonpath='{.data.age\.agekey}' | base64 -d
          flux create source git kubesat-planckster \
          --url=${{ github.event.repository.html_url }} \
          --namespace=flux-system \
          --branch=${GITHUB_REF#refs/heads/} \
          --username=${GITHUB_ACTOR} \
          --password=${{ secrets.GITHUB_TOKEN }} \
          --ignore-paths="clusters/**/flux-system/"
          flux create kustomization infrastructure \
          --source=kubesat-planckster \
          --namespace=flux-system \
          --path=./infrastructure \
          --decryption-provider=sops \
          --decryption-secret=sops-age
          flux create kustomization release \
          --namespace=flux-system \
          --source=kubesat-planckster \
          --path=./releases/staging
          --decryption-provider=sops \
          --decryption-secret=sops-age
          --depends-on=infrastructure
      - name: Verify infra reconciliation
        run: |
          kubectl -n flux-system wait kustomization/infrastructure --for=condition=ready --timeout=5m
      - name: Verify release reconciliation
        run: |
          # kubectl -n flux-system wait kustomization/release --for=condition=ready --timeout=5m
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n flux-system get all
          kubectl -n flux-system logs deploy/source-controller
          kubectl -n flux-system logs deploy/kustomize-controller
          kubectl -n flux-system logs deploy/helm-controller
          kubectl -n sda get all
          kubectl -n sda logs deploy/source-controller
          kubectl -n sda logs deploy/kustomize-controller
          kubectl -n sda logs deploy/helm-controller
          flux get all --all-namespaces